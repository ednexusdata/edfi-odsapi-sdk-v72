/*
 * Ed-Fi Operational Data Store API
 *
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = EdFi.OdsApi.Sdk.v72.Client.OpenAPIDateConverter;

namespace EdFi.OdsApi.Sdk.v72.Models.All
{
    /// <summary>
    /// EdFiStudentDisciplineIncidentBehaviorAssociation
    /// </summary>
    [DataContract(Name = "edFi_studentDisciplineIncidentBehaviorAssociation")]
    public partial class EdFiStudentDisciplineIncidentBehaviorAssociation : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EdFiStudentDisciplineIncidentBehaviorAssociation" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EdFiStudentDisciplineIncidentBehaviorAssociation() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EdFiStudentDisciplineIncidentBehaviorAssociation" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="behaviorDescriptor">Describes behavior by category. (required).</param>
        /// <param name="disciplineIncidentReference">disciplineIncidentReference (required).</param>
        /// <param name="studentReference">studentReference (required).</param>
        /// <param name="behaviorDetailedDescription">Specifies a more granular level of detail of a behavior involved in the incident..</param>
        /// <param name="disciplineIncidentParticipationCodes">An unordered collection of studentDisciplineIncidentBehaviorAssociationDisciplineIncidentParticipationCodes. The role or type of participation of a student in a discipline incident..</param>
        /// <param name="etag">A unique system-generated value that identifies the version of the resource..</param>
        /// <param name="lastModifiedDate">The date and time the resource was last modified..</param>
        /// <param name="ext">Extensions to the StudentDisciplineIncidentBehaviorAssociation entity..</param>
        public EdFiStudentDisciplineIncidentBehaviorAssociation(string id = default, string behaviorDescriptor = default, EdFiDisciplineIncidentReference disciplineIncidentReference = default, EdFiStudentReference studentReference = default, string behaviorDetailedDescription = default, List<EdFiStudentDisciplineIncidentBehaviorAssociationDisciplineIncidentParticipationCode> disciplineIncidentParticipationCodes = default, string etag = default, DateTime lastModifiedDate = default, Object ext = default)
        {
            // to ensure "behaviorDescriptor" is required (not null)
            if (behaviorDescriptor == null)
            {
                throw new ArgumentNullException("behaviorDescriptor is a required property for EdFiStudentDisciplineIncidentBehaviorAssociation and cannot be null");
            }
            this.BehaviorDescriptor = behaviorDescriptor;
            // to ensure "disciplineIncidentReference" is required (not null)
            if (disciplineIncidentReference == null)
            {
                throw new ArgumentNullException("disciplineIncidentReference is a required property for EdFiStudentDisciplineIncidentBehaviorAssociation and cannot be null");
            }
            this.DisciplineIncidentReference = disciplineIncidentReference;
            // to ensure "studentReference" is required (not null)
            if (studentReference == null)
            {
                throw new ArgumentNullException("studentReference is a required property for EdFiStudentDisciplineIncidentBehaviorAssociation and cannot be null");
            }
            this.StudentReference = studentReference;
            this.Id = id;
            this.BehaviorDetailedDescription = behaviorDetailedDescription;
            this.DisciplineIncidentParticipationCodes = disciplineIncidentParticipationCodes;
            this.Etag = etag;
            this.LastModifiedDate = lastModifiedDate;
            this.Ext = ext;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Describes behavior by category.
        /// </summary>
        /// <value>Describes behavior by category.</value>
        [DataMember(Name = "behaviorDescriptor", IsRequired = true, EmitDefaultValue = true)]
        public string BehaviorDescriptor { get; set; }

        /// <summary>
        /// Gets or Sets DisciplineIncidentReference
        /// </summary>
        [DataMember(Name = "disciplineIncidentReference", IsRequired = true, EmitDefaultValue = true)]
        public EdFiDisciplineIncidentReference DisciplineIncidentReference { get; set; }

        /// <summary>
        /// Gets or Sets StudentReference
        /// </summary>
        [DataMember(Name = "studentReference", IsRequired = true, EmitDefaultValue = true)]
        public EdFiStudentReference StudentReference { get; set; }

        /// <summary>
        /// Specifies a more granular level of detail of a behavior involved in the incident.
        /// </summary>
        /// <value>Specifies a more granular level of detail of a behavior involved in the incident.</value>
        [DataMember(Name = "behaviorDetailedDescription", EmitDefaultValue = true)]
        public string BehaviorDetailedDescription { get; set; }

        /// <summary>
        /// An unordered collection of studentDisciplineIncidentBehaviorAssociationDisciplineIncidentParticipationCodes. The role or type of participation of a student in a discipline incident.
        /// </summary>
        /// <value>An unordered collection of studentDisciplineIncidentBehaviorAssociationDisciplineIncidentParticipationCodes. The role or type of participation of a student in a discipline incident.</value>
        [DataMember(Name = "disciplineIncidentParticipationCodes", EmitDefaultValue = false)]
        public List<EdFiStudentDisciplineIncidentBehaviorAssociationDisciplineIncidentParticipationCode> DisciplineIncidentParticipationCodes { get; set; }

        /// <summary>
        /// A unique system-generated value that identifies the version of the resource.
        /// </summary>
        /// <value>A unique system-generated value that identifies the version of the resource.</value>
        [DataMember(Name = "_etag", EmitDefaultValue = false)]
        public string Etag { get; set; }

        /// <summary>
        /// The date and time the resource was last modified.
        /// </summary>
        /// <value>The date and time the resource was last modified.</value>
        [DataMember(Name = "_lastModifiedDate", EmitDefaultValue = false)]
        public DateTime LastModifiedDate { get; set; }

        /// <summary>
        /// Extensions to the StudentDisciplineIncidentBehaviorAssociation entity.
        /// </summary>
        /// <value>Extensions to the StudentDisciplineIncidentBehaviorAssociation entity.</value>
        [DataMember(Name = "_ext", EmitDefaultValue = false)]
        public Object Ext { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EdFiStudentDisciplineIncidentBehaviorAssociation {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  BehaviorDescriptor: ").Append(BehaviorDescriptor).Append("\n");
            sb.Append("  DisciplineIncidentReference: ").Append(DisciplineIncidentReference).Append("\n");
            sb.Append("  StudentReference: ").Append(StudentReference).Append("\n");
            sb.Append("  BehaviorDetailedDescription: ").Append(BehaviorDetailedDescription).Append("\n");
            sb.Append("  DisciplineIncidentParticipationCodes: ").Append(DisciplineIncidentParticipationCodes).Append("\n");
            sb.Append("  Etag: ").Append(Etag).Append("\n");
            sb.Append("  LastModifiedDate: ").Append(LastModifiedDate).Append("\n");
            sb.Append("  Ext: ").Append(Ext).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // BehaviorDescriptor (string) maxLength
            if (this.BehaviorDescriptor != null && this.BehaviorDescriptor.Length > 306)
            {
                yield return new ValidationResult("Invalid value for BehaviorDescriptor, length must be less than 306.", new [] { "BehaviorDescriptor" });
            }

            // BehaviorDetailedDescription (string) maxLength
            if (this.BehaviorDetailedDescription != null && this.BehaviorDetailedDescription.Length > 1024)
            {
                yield return new ValidationResult("Invalid value for BehaviorDetailedDescription, length must be less than 1024.", new [] { "BehaviorDetailedDescription" });
            }

            yield break;
        }
    }

}
