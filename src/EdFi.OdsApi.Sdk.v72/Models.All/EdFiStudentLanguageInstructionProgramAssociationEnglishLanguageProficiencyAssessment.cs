/*
 * Ed-Fi Operational Data Store API
 *
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = EdFi.OdsApi.Sdk.v72.Client.OpenAPIDateConverter;

namespace EdFi.OdsApi.Sdk.v72.Models.All
{
    /// <summary>
    /// EdFiStudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessment
    /// </summary>
    [DataContract(Name = "edFi_studentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessment")]
    public partial class EdFiStudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessment : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EdFiStudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessment" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EdFiStudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessment() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EdFiStudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessment" /> class.
        /// </summary>
        /// <param name="monitoredDescriptor">Student is monitored on content achievement who are no longer receiving services..</param>
        /// <param name="participationDescriptor">Field indicating the participation in the yearly English language assessment..</param>
        /// <param name="proficiencyDescriptor">The proficiency level for the yearly English language assessment..</param>
        /// <param name="progressDescriptor">The yearly progress or growth from last year&#39;s assessment..</param>
        /// <param name="schoolYearTypeReference">schoolYearTypeReference (required).</param>
        /// <param name="ext">Extensions to the StudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessment entity..</param>
        public EdFiStudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessment(string monitoredDescriptor = default, string participationDescriptor = default, string proficiencyDescriptor = default, string progressDescriptor = default, EdFiSchoolYearTypeReference schoolYearTypeReference = default, Object ext = default)
        {
            // to ensure "schoolYearTypeReference" is required (not null)
            if (schoolYearTypeReference == null)
            {
                throw new ArgumentNullException("schoolYearTypeReference is a required property for EdFiStudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessment and cannot be null");
            }
            this.SchoolYearTypeReference = schoolYearTypeReference;
            this.MonitoredDescriptor = monitoredDescriptor;
            this.ParticipationDescriptor = participationDescriptor;
            this.ProficiencyDescriptor = proficiencyDescriptor;
            this.ProgressDescriptor = progressDescriptor;
            this.Ext = ext;
        }

        /// <summary>
        /// Student is monitored on content achievement who are no longer receiving services.
        /// </summary>
        /// <value>Student is monitored on content achievement who are no longer receiving services.</value>
        [DataMember(Name = "monitoredDescriptor", EmitDefaultValue = true)]
        public string MonitoredDescriptor { get; set; }

        /// <summary>
        /// Field indicating the participation in the yearly English language assessment.
        /// </summary>
        /// <value>Field indicating the participation in the yearly English language assessment.</value>
        [DataMember(Name = "participationDescriptor", EmitDefaultValue = true)]
        public string ParticipationDescriptor { get; set; }

        /// <summary>
        /// The proficiency level for the yearly English language assessment.
        /// </summary>
        /// <value>The proficiency level for the yearly English language assessment.</value>
        [DataMember(Name = "proficiencyDescriptor", EmitDefaultValue = true)]
        public string ProficiencyDescriptor { get; set; }

        /// <summary>
        /// The yearly progress or growth from last year&#39;s assessment.
        /// </summary>
        /// <value>The yearly progress or growth from last year&#39;s assessment.</value>
        [DataMember(Name = "progressDescriptor", EmitDefaultValue = true)]
        public string ProgressDescriptor { get; set; }

        /// <summary>
        /// Gets or Sets SchoolYearTypeReference
        /// </summary>
        [DataMember(Name = "schoolYearTypeReference", IsRequired = true, EmitDefaultValue = true)]
        public EdFiSchoolYearTypeReference SchoolYearTypeReference { get; set; }

        /// <summary>
        /// Extensions to the StudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessment entity.
        /// </summary>
        /// <value>Extensions to the StudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessment entity.</value>
        [DataMember(Name = "_ext", EmitDefaultValue = false)]
        public Object Ext { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EdFiStudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessment {\n");
            sb.Append("  MonitoredDescriptor: ").Append(MonitoredDescriptor).Append("\n");
            sb.Append("  ParticipationDescriptor: ").Append(ParticipationDescriptor).Append("\n");
            sb.Append("  ProficiencyDescriptor: ").Append(ProficiencyDescriptor).Append("\n");
            sb.Append("  ProgressDescriptor: ").Append(ProgressDescriptor).Append("\n");
            sb.Append("  SchoolYearTypeReference: ").Append(SchoolYearTypeReference).Append("\n");
            sb.Append("  Ext: ").Append(Ext).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // MonitoredDescriptor (string) maxLength
            if (this.MonitoredDescriptor != null && this.MonitoredDescriptor.Length > 306)
            {
                yield return new ValidationResult("Invalid value for MonitoredDescriptor, length must be less than 306.", new [] { "MonitoredDescriptor" });
            }

            // ParticipationDescriptor (string) maxLength
            if (this.ParticipationDescriptor != null && this.ParticipationDescriptor.Length > 306)
            {
                yield return new ValidationResult("Invalid value for ParticipationDescriptor, length must be less than 306.", new [] { "ParticipationDescriptor" });
            }

            // ProficiencyDescriptor (string) maxLength
            if (this.ProficiencyDescriptor != null && this.ProficiencyDescriptor.Length > 306)
            {
                yield return new ValidationResult("Invalid value for ProficiencyDescriptor, length must be less than 306.", new [] { "ProficiencyDescriptor" });
            }

            // ProgressDescriptor (string) maxLength
            if (this.ProgressDescriptor != null && this.ProgressDescriptor.Length > 306)
            {
                yield return new ValidationResult("Invalid value for ProgressDescriptor, length must be less than 306.", new [] { "ProgressDescriptor" });
            }

            yield break;
        }
    }

}
