/*
 * Ed-Fi Operational Data Store API
 *
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = EdFi.OdsApi.Sdk.v72.Client.OpenAPIDateConverter;

namespace EdFi.OdsApi.Sdk.v72.Models.All
{
    /// <summary>
    /// EdFiStateEducationAgencyFederalFunds
    /// </summary>
    [DataContract(Name = "edFi_stateEducationAgencyFederalFunds")]
    public partial class EdFiStateEducationAgencyFederalFunds : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EdFiStateEducationAgencyFederalFunds" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EdFiStateEducationAgencyFederalFunds() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EdFiStateEducationAgencyFederalFunds" /> class.
        /// </summary>
        /// <param name="fiscalYear">The fiscal year for which the federal funds are received. (required).</param>
        /// <param name="federalProgramsFundingAllocation">The amount of federal dollars distributed to Local Education Agencies (LEAs), retained by the State Education Agency (SEA) for program administration or other approved state-level activities (including unallocated, transferred to another state agency, or distributed to entities other than LEAs)..</param>
        /// <param name="ext">Extensions to the StateEducationAgencyFederalFunds entity..</param>
        public EdFiStateEducationAgencyFederalFunds(int fiscalYear = default, double? federalProgramsFundingAllocation = default, Object ext = default)
        {
            this.FiscalYear = fiscalYear;
            this.FederalProgramsFundingAllocation = federalProgramsFundingAllocation;
            this.Ext = ext;
        }

        /// <summary>
        /// The fiscal year for which the federal funds are received.
        /// </summary>
        /// <value>The fiscal year for which the federal funds are received.</value>
        [DataMember(Name = "fiscalYear", IsRequired = true, EmitDefaultValue = true)]
        public int FiscalYear { get; set; }

        /// <summary>
        /// The amount of federal dollars distributed to Local Education Agencies (LEAs), retained by the State Education Agency (SEA) for program administration or other approved state-level activities (including unallocated, transferred to another state agency, or distributed to entities other than LEAs).
        /// </summary>
        /// <value>The amount of federal dollars distributed to Local Education Agencies (LEAs), retained by the State Education Agency (SEA) for program administration or other approved state-level activities (including unallocated, transferred to another state agency, or distributed to entities other than LEAs).</value>
        [DataMember(Name = "federalProgramsFundingAllocation", EmitDefaultValue = true)]
        public double? FederalProgramsFundingAllocation { get; set; }

        /// <summary>
        /// Extensions to the StateEducationAgencyFederalFunds entity.
        /// </summary>
        /// <value>Extensions to the StateEducationAgencyFederalFunds entity.</value>
        [DataMember(Name = "_ext", EmitDefaultValue = false)]
        public Object Ext { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EdFiStateEducationAgencyFederalFunds {\n");
            sb.Append("  FiscalYear: ").Append(FiscalYear).Append("\n");
            sb.Append("  FederalProgramsFundingAllocation: ").Append(FederalProgramsFundingAllocation).Append("\n");
            sb.Append("  Ext: ").Append(Ext).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // FederalProgramsFundingAllocation (double?) maximum
            if (this.FederalProgramsFundingAllocation > (double?)922337203685477.6)
            {
                yield return new ValidationResult("Invalid value for FederalProgramsFundingAllocation, must be a value less than or equal to 922337203685477.6.", new [] { "FederalProgramsFundingAllocation" });
            }

            // FederalProgramsFundingAllocation (double?) minimum
            if (this.FederalProgramsFundingAllocation < (double?)-922337203685477.6)
            {
                yield return new ValidationResult("Invalid value for FederalProgramsFundingAllocation, must be a value greater than or equal to -922337203685477.6.", new [] { "FederalProgramsFundingAllocation" });
            }

            yield break;
        }
    }

}
