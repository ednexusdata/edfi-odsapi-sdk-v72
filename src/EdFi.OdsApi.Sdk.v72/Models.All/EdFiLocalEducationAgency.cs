/*
 * Ed-Fi Operational Data Store API
 *
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = EdFi.OdsApi.Sdk.v72.Client.OpenAPIDateConverter;

namespace EdFi.OdsApi.Sdk.v72.Models.All
{
    /// <summary>
    /// EdFiLocalEducationAgency
    /// </summary>
    [DataContract(Name = "edFi_localEducationAgency")]
    public partial class EdFiLocalEducationAgency : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EdFiLocalEducationAgency" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EdFiLocalEducationAgency() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EdFiLocalEducationAgency" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="categories">An unordered collection of educationOrganizationCategories. The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state. (required).</param>
        /// <param name="localEducationAgencyId">The identifier assigned to a local education agency. It must be distinct from any other identifier assigned to educational organizations, such as a SchoolId, to prevent duplication. (required).</param>
        /// <param name="educationServiceCenterReference">educationServiceCenterReference.</param>
        /// <param name="parentLocalEducationAgencyReference">parentLocalEducationAgencyReference.</param>
        /// <param name="stateEducationAgencyReference">stateEducationAgencyReference.</param>
        /// <param name="accountabilities">An unordered collection of localEducationAgencyAccountabilities. This entity maintains information about federal reporting and accountability for local education agencies..</param>
        /// <param name="addresses">An unordered collection of educationOrganizationAddresses. The set of elements that describes an address for the education entity, including the street address, city, state, ZIP code, and ZIP code + 4..</param>
        /// <param name="charterStatusDescriptor">A school or agency providing free public elementary or secondary education to eligible students under a specific charter granted by the state legislature or other appropriate authority and designated by such authority to be a charter school..</param>
        /// <param name="federalFunds">An unordered collection of localEducationAgencyFederalFunds. Contains the information about the reception and use of federal funds for reporting purposes..</param>
        /// <param name="identificationCodes">An unordered collection of educationOrganizationIdentificationCodes. A unique number or alphanumeric code assigned to an education organization by a school, school system, a state, or other agency or entity..</param>
        /// <param name="indicators">An unordered collection of educationOrganizationIndicators. An indicator or metric of an education organization..</param>
        /// <param name="institutionTelephones">An unordered collection of educationOrganizationInstitutionTelephones. The 10-digit telephone number, including the area code, for the education entity..</param>
        /// <param name="internationalAddresses">An unordered collection of educationOrganizationInternationalAddresses. The set of elements that describes the international physical location of the education entity..</param>
        /// <param name="localEducationAgencyCategoryDescriptor">The category of local education agency/district. (required).</param>
        /// <param name="nameOfInstitution">The full, legally accepted name of the institution. (required).</param>
        /// <param name="operationalStatusDescriptor">The current operational status of the education organization (e.g., active, inactive)..</param>
        /// <param name="shortNameOfInstitution">A short name for the institution..</param>
        /// <param name="webSite">The public web site address (URL) for the education organization..</param>
        /// <param name="etag">A unique system-generated value that identifies the version of the resource..</param>
        /// <param name="lastModifiedDate">The date and time the resource was last modified..</param>
        /// <param name="ext">Extensions to the LocalEducationAgency entity..</param>
        public EdFiLocalEducationAgency(string id = default, List<EdFiEducationOrganizationCategory> categories = default, long localEducationAgencyId = default, EdFiEducationServiceCenterReference educationServiceCenterReference = default, EdFiLocalEducationAgencyReference parentLocalEducationAgencyReference = default, EdFiStateEducationAgencyReference stateEducationAgencyReference = default, List<EdFiLocalEducationAgencyAccountability> accountabilities = default, List<EdFiEducationOrganizationAddress> addresses = default, string charterStatusDescriptor = default, List<EdFiLocalEducationAgencyFederalFunds> federalFunds = default, List<EdFiEducationOrganizationIdentificationCode> identificationCodes = default, List<EdFiEducationOrganizationIndicator> indicators = default, List<EdFiEducationOrganizationInstitutionTelephone> institutionTelephones = default, List<EdFiEducationOrganizationInternationalAddress> internationalAddresses = default, string localEducationAgencyCategoryDescriptor = default, string nameOfInstitution = default, string operationalStatusDescriptor = default, string shortNameOfInstitution = default, string webSite = default, string etag = default, DateTime lastModifiedDate = default, Object ext = default)
        {
            // to ensure "categories" is required (not null)
            if (categories == null)
            {
                throw new ArgumentNullException("categories is a required property for EdFiLocalEducationAgency and cannot be null");
            }
            this.Categories = categories;
            this.LocalEducationAgencyId = localEducationAgencyId;
            // to ensure "localEducationAgencyCategoryDescriptor" is required (not null)
            if (localEducationAgencyCategoryDescriptor == null)
            {
                throw new ArgumentNullException("localEducationAgencyCategoryDescriptor is a required property for EdFiLocalEducationAgency and cannot be null");
            }
            this.LocalEducationAgencyCategoryDescriptor = localEducationAgencyCategoryDescriptor;
            // to ensure "nameOfInstitution" is required (not null)
            if (nameOfInstitution == null)
            {
                throw new ArgumentNullException("nameOfInstitution is a required property for EdFiLocalEducationAgency and cannot be null");
            }
            this.NameOfInstitution = nameOfInstitution;
            this.Id = id;
            this.EducationServiceCenterReference = educationServiceCenterReference;
            this.ParentLocalEducationAgencyReference = parentLocalEducationAgencyReference;
            this.StateEducationAgencyReference = stateEducationAgencyReference;
            this.Accountabilities = accountabilities;
            this.Addresses = addresses;
            this.CharterStatusDescriptor = charterStatusDescriptor;
            this.FederalFunds = federalFunds;
            this.IdentificationCodes = identificationCodes;
            this.Indicators = indicators;
            this.InstitutionTelephones = institutionTelephones;
            this.InternationalAddresses = internationalAddresses;
            this.OperationalStatusDescriptor = operationalStatusDescriptor;
            this.ShortNameOfInstitution = shortNameOfInstitution;
            this.WebSite = webSite;
            this.Etag = etag;
            this.LastModifiedDate = lastModifiedDate;
            this.Ext = ext;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// An unordered collection of educationOrganizationCategories. The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state.
        /// </summary>
        /// <value>An unordered collection of educationOrganizationCategories. The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state.</value>
        [DataMember(Name = "categories", IsRequired = true, EmitDefaultValue = true)]
        public List<EdFiEducationOrganizationCategory> Categories { get; set; }

        /// <summary>
        /// The identifier assigned to a local education agency. It must be distinct from any other identifier assigned to educational organizations, such as a SchoolId, to prevent duplication.
        /// </summary>
        /// <value>The identifier assigned to a local education agency. It must be distinct from any other identifier assigned to educational organizations, such as a SchoolId, to prevent duplication.</value>
        [DataMember(Name = "localEducationAgencyId", IsRequired = true, EmitDefaultValue = true)]
        public long LocalEducationAgencyId { get; set; }

        /// <summary>
        /// Gets or Sets EducationServiceCenterReference
        /// </summary>
        [DataMember(Name = "educationServiceCenterReference", EmitDefaultValue = false)]
        public EdFiEducationServiceCenterReference EducationServiceCenterReference { get; set; }

        /// <summary>
        /// Gets or Sets ParentLocalEducationAgencyReference
        /// </summary>
        [DataMember(Name = "parentLocalEducationAgencyReference", EmitDefaultValue = false)]
        public EdFiLocalEducationAgencyReference ParentLocalEducationAgencyReference { get; set; }

        /// <summary>
        /// Gets or Sets StateEducationAgencyReference
        /// </summary>
        [DataMember(Name = "stateEducationAgencyReference", EmitDefaultValue = false)]
        public EdFiStateEducationAgencyReference StateEducationAgencyReference { get; set; }

        /// <summary>
        /// An unordered collection of localEducationAgencyAccountabilities. This entity maintains information about federal reporting and accountability for local education agencies.
        /// </summary>
        /// <value>An unordered collection of localEducationAgencyAccountabilities. This entity maintains information about federal reporting and accountability for local education agencies.</value>
        [DataMember(Name = "accountabilities", EmitDefaultValue = false)]
        public List<EdFiLocalEducationAgencyAccountability> Accountabilities { get; set; }

        /// <summary>
        /// An unordered collection of educationOrganizationAddresses. The set of elements that describes an address for the education entity, including the street address, city, state, ZIP code, and ZIP code + 4.
        /// </summary>
        /// <value>An unordered collection of educationOrganizationAddresses. The set of elements that describes an address for the education entity, including the street address, city, state, ZIP code, and ZIP code + 4.</value>
        [DataMember(Name = "addresses", EmitDefaultValue = false)]
        public List<EdFiEducationOrganizationAddress> Addresses { get; set; }

        /// <summary>
        /// A school or agency providing free public elementary or secondary education to eligible students under a specific charter granted by the state legislature or other appropriate authority and designated by such authority to be a charter school.
        /// </summary>
        /// <value>A school or agency providing free public elementary or secondary education to eligible students under a specific charter granted by the state legislature or other appropriate authority and designated by such authority to be a charter school.</value>
        [DataMember(Name = "charterStatusDescriptor", EmitDefaultValue = true)]
        public string CharterStatusDescriptor { get; set; }

        /// <summary>
        /// An unordered collection of localEducationAgencyFederalFunds. Contains the information about the reception and use of federal funds for reporting purposes.
        /// </summary>
        /// <value>An unordered collection of localEducationAgencyFederalFunds. Contains the information about the reception and use of federal funds for reporting purposes.</value>
        [DataMember(Name = "federalFunds", EmitDefaultValue = false)]
        public List<EdFiLocalEducationAgencyFederalFunds> FederalFunds { get; set; }

        /// <summary>
        /// An unordered collection of educationOrganizationIdentificationCodes. A unique number or alphanumeric code assigned to an education organization by a school, school system, a state, or other agency or entity.
        /// </summary>
        /// <value>An unordered collection of educationOrganizationIdentificationCodes. A unique number or alphanumeric code assigned to an education organization by a school, school system, a state, or other agency or entity.</value>
        [DataMember(Name = "identificationCodes", EmitDefaultValue = false)]
        public List<EdFiEducationOrganizationIdentificationCode> IdentificationCodes { get; set; }

        /// <summary>
        /// An unordered collection of educationOrganizationIndicators. An indicator or metric of an education organization.
        /// </summary>
        /// <value>An unordered collection of educationOrganizationIndicators. An indicator or metric of an education organization.</value>
        [DataMember(Name = "indicators", EmitDefaultValue = false)]
        public List<EdFiEducationOrganizationIndicator> Indicators { get; set; }

        /// <summary>
        /// An unordered collection of educationOrganizationInstitutionTelephones. The 10-digit telephone number, including the area code, for the education entity.
        /// </summary>
        /// <value>An unordered collection of educationOrganizationInstitutionTelephones. The 10-digit telephone number, including the area code, for the education entity.</value>
        [DataMember(Name = "institutionTelephones", EmitDefaultValue = false)]
        public List<EdFiEducationOrganizationInstitutionTelephone> InstitutionTelephones { get; set; }

        /// <summary>
        /// An unordered collection of educationOrganizationInternationalAddresses. The set of elements that describes the international physical location of the education entity.
        /// </summary>
        /// <value>An unordered collection of educationOrganizationInternationalAddresses. The set of elements that describes the international physical location of the education entity.</value>
        [DataMember(Name = "internationalAddresses", EmitDefaultValue = false)]
        public List<EdFiEducationOrganizationInternationalAddress> InternationalAddresses { get; set; }

        /// <summary>
        /// The category of local education agency/district.
        /// </summary>
        /// <value>The category of local education agency/district.</value>
        [DataMember(Name = "localEducationAgencyCategoryDescriptor", IsRequired = true, EmitDefaultValue = true)]
        public string LocalEducationAgencyCategoryDescriptor { get; set; }

        /// <summary>
        /// The full, legally accepted name of the institution.
        /// </summary>
        /// <value>The full, legally accepted name of the institution.</value>
        [DataMember(Name = "nameOfInstitution", IsRequired = true, EmitDefaultValue = true)]
        public string NameOfInstitution { get; set; }

        /// <summary>
        /// The current operational status of the education organization (e.g., active, inactive).
        /// </summary>
        /// <value>The current operational status of the education organization (e.g., active, inactive).</value>
        [DataMember(Name = "operationalStatusDescriptor", EmitDefaultValue = true)]
        public string OperationalStatusDescriptor { get; set; }

        /// <summary>
        /// A short name for the institution.
        /// </summary>
        /// <value>A short name for the institution.</value>
        [DataMember(Name = "shortNameOfInstitution", EmitDefaultValue = true)]
        public string ShortNameOfInstitution { get; set; }

        /// <summary>
        /// The public web site address (URL) for the education organization.
        /// </summary>
        /// <value>The public web site address (URL) for the education organization.</value>
        [DataMember(Name = "webSite", EmitDefaultValue = true)]
        public string WebSite { get; set; }

        /// <summary>
        /// A unique system-generated value that identifies the version of the resource.
        /// </summary>
        /// <value>A unique system-generated value that identifies the version of the resource.</value>
        [DataMember(Name = "_etag", EmitDefaultValue = false)]
        public string Etag { get; set; }

        /// <summary>
        /// The date and time the resource was last modified.
        /// </summary>
        /// <value>The date and time the resource was last modified.</value>
        [DataMember(Name = "_lastModifiedDate", EmitDefaultValue = false)]
        public DateTime LastModifiedDate { get; set; }

        /// <summary>
        /// Extensions to the LocalEducationAgency entity.
        /// </summary>
        /// <value>Extensions to the LocalEducationAgency entity.</value>
        [DataMember(Name = "_ext", EmitDefaultValue = false)]
        public Object Ext { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EdFiLocalEducationAgency {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Categories: ").Append(Categories).Append("\n");
            sb.Append("  LocalEducationAgencyId: ").Append(LocalEducationAgencyId).Append("\n");
            sb.Append("  EducationServiceCenterReference: ").Append(EducationServiceCenterReference).Append("\n");
            sb.Append("  ParentLocalEducationAgencyReference: ").Append(ParentLocalEducationAgencyReference).Append("\n");
            sb.Append("  StateEducationAgencyReference: ").Append(StateEducationAgencyReference).Append("\n");
            sb.Append("  Accountabilities: ").Append(Accountabilities).Append("\n");
            sb.Append("  Addresses: ").Append(Addresses).Append("\n");
            sb.Append("  CharterStatusDescriptor: ").Append(CharterStatusDescriptor).Append("\n");
            sb.Append("  FederalFunds: ").Append(FederalFunds).Append("\n");
            sb.Append("  IdentificationCodes: ").Append(IdentificationCodes).Append("\n");
            sb.Append("  Indicators: ").Append(Indicators).Append("\n");
            sb.Append("  InstitutionTelephones: ").Append(InstitutionTelephones).Append("\n");
            sb.Append("  InternationalAddresses: ").Append(InternationalAddresses).Append("\n");
            sb.Append("  LocalEducationAgencyCategoryDescriptor: ").Append(LocalEducationAgencyCategoryDescriptor).Append("\n");
            sb.Append("  NameOfInstitution: ").Append(NameOfInstitution).Append("\n");
            sb.Append("  OperationalStatusDescriptor: ").Append(OperationalStatusDescriptor).Append("\n");
            sb.Append("  ShortNameOfInstitution: ").Append(ShortNameOfInstitution).Append("\n");
            sb.Append("  WebSite: ").Append(WebSite).Append("\n");
            sb.Append("  Etag: ").Append(Etag).Append("\n");
            sb.Append("  LastModifiedDate: ").Append(LastModifiedDate).Append("\n");
            sb.Append("  Ext: ").Append(Ext).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // CharterStatusDescriptor (string) maxLength
            if (this.CharterStatusDescriptor != null && this.CharterStatusDescriptor.Length > 306)
            {
                yield return new ValidationResult("Invalid value for CharterStatusDescriptor, length must be less than 306.", new [] { "CharterStatusDescriptor" });
            }

            // LocalEducationAgencyCategoryDescriptor (string) maxLength
            if (this.LocalEducationAgencyCategoryDescriptor != null && this.LocalEducationAgencyCategoryDescriptor.Length > 306)
            {
                yield return new ValidationResult("Invalid value for LocalEducationAgencyCategoryDescriptor, length must be less than 306.", new [] { "LocalEducationAgencyCategoryDescriptor" });
            }

            // NameOfInstitution (string) maxLength
            if (this.NameOfInstitution != null && this.NameOfInstitution.Length > 75)
            {
                yield return new ValidationResult("Invalid value for NameOfInstitution, length must be less than 75.", new [] { "NameOfInstitution" });
            }

            // OperationalStatusDescriptor (string) maxLength
            if (this.OperationalStatusDescriptor != null && this.OperationalStatusDescriptor.Length > 306)
            {
                yield return new ValidationResult("Invalid value for OperationalStatusDescriptor, length must be less than 306.", new [] { "OperationalStatusDescriptor" });
            }

            // ShortNameOfInstitution (string) maxLength
            if (this.ShortNameOfInstitution != null && this.ShortNameOfInstitution.Length > 75)
            {
                yield return new ValidationResult("Invalid value for ShortNameOfInstitution, length must be less than 75.", new [] { "ShortNameOfInstitution" });
            }

            // WebSite (string) maxLength
            if (this.WebSite != null && this.WebSite.Length > 255)
            {
                yield return new ValidationResult("Invalid value for WebSite, length must be less than 255.", new [] { "WebSite" });
            }

            // WebSite (string) minLength
            if (this.WebSite != null && this.WebSite.Length < 5)
            {
                yield return new ValidationResult("Invalid value for WebSite, length must be greater than 5.", new [] { "WebSite" });
            }

            yield break;
        }
    }

}
