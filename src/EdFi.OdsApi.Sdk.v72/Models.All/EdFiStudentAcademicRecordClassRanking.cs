/*
 * Ed-Fi Operational Data Store API
 *
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = EdFi.OdsApi.Sdk.v72.Client.OpenAPIDateConverter;

namespace EdFi.OdsApi.Sdk.v72.Models.All
{
    /// <summary>
    /// EdFiStudentAcademicRecordClassRanking
    /// </summary>
    [DataContract(Name = "edFi_studentAcademicRecordClassRanking")]
    public partial class EdFiStudentAcademicRecordClassRanking : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EdFiStudentAcademicRecordClassRanking" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EdFiStudentAcademicRecordClassRanking() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EdFiStudentAcademicRecordClassRanking" /> class.
        /// </summary>
        /// <param name="classRank">The academic rank of a student in relation to his or her graduating class (e.g., 1st, 2nd, 3rd). (required).</param>
        /// <param name="classRankingDate">Date class ranking was determined..</param>
        /// <param name="percentageRanking">The academic percentage rank of a student in relation to his or her graduating class (e.g., 95%, 80%, 50%)..</param>
        /// <param name="totalNumberInClass">The total number of students in the student&#39;s graduating class. (required).</param>
        /// <param name="ext">Extensions to the StudentAcademicRecordClassRanking entity..</param>
        public EdFiStudentAcademicRecordClassRanking(int classRank = default, DateOnly? classRankingDate = default, int? percentageRanking = default, int totalNumberInClass = default, Object ext = default)
        {
            this.ClassRank = classRank;
            this.TotalNumberInClass = totalNumberInClass;
            this.ClassRankingDate = classRankingDate;
            this.PercentageRanking = percentageRanking;
            this.Ext = ext;
        }

        /// <summary>
        /// The academic rank of a student in relation to his or her graduating class (e.g., 1st, 2nd, 3rd).
        /// </summary>
        /// <value>The academic rank of a student in relation to his or her graduating class (e.g., 1st, 2nd, 3rd).</value>
        [DataMember(Name = "classRank", IsRequired = true, EmitDefaultValue = true)]
        public int ClassRank { get; set; }

        /// <summary>
        /// Date class ranking was determined.
        /// </summary>
        /// <value>Date class ranking was determined.</value>
        [DataMember(Name = "classRankingDate", EmitDefaultValue = true)]
        public DateOnly? ClassRankingDate { get; set; }

        /// <summary>
        /// The academic percentage rank of a student in relation to his or her graduating class (e.g., 95%, 80%, 50%).
        /// </summary>
        /// <value>The academic percentage rank of a student in relation to his or her graduating class (e.g., 95%, 80%, 50%).</value>
        [DataMember(Name = "percentageRanking", EmitDefaultValue = true)]
        public int? PercentageRanking { get; set; }

        /// <summary>
        /// The total number of students in the student&#39;s graduating class.
        /// </summary>
        /// <value>The total number of students in the student&#39;s graduating class.</value>
        [DataMember(Name = "totalNumberInClass", IsRequired = true, EmitDefaultValue = true)]
        public int TotalNumberInClass { get; set; }

        /// <summary>
        /// Extensions to the StudentAcademicRecordClassRanking entity.
        /// </summary>
        /// <value>Extensions to the StudentAcademicRecordClassRanking entity.</value>
        [DataMember(Name = "_ext", EmitDefaultValue = false)]
        public Object Ext { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EdFiStudentAcademicRecordClassRanking {\n");
            sb.Append("  ClassRank: ").Append(ClassRank).Append("\n");
            sb.Append("  ClassRankingDate: ").Append(ClassRankingDate).Append("\n");
            sb.Append("  PercentageRanking: ").Append(PercentageRanking).Append("\n");
            sb.Append("  TotalNumberInClass: ").Append(TotalNumberInClass).Append("\n");
            sb.Append("  Ext: ").Append(Ext).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
