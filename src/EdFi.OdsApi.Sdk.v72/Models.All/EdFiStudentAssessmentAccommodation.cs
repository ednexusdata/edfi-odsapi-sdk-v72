/*
 * Ed-Fi Operational Data Store API
 *
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = EdFi.OdsApi.Sdk.v72.Client.OpenAPIDateConverter;

namespace EdFi.OdsApi.Sdk.v72.Models.All
{
    /// <summary>
    /// EdFiStudentAssessmentAccommodation
    /// </summary>
    [DataContract(Name = "edFi_studentAssessmentAccommodation")]
    public partial class EdFiStudentAssessmentAccommodation : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EdFiStudentAssessmentAccommodation" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EdFiStudentAssessmentAccommodation() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EdFiStudentAssessmentAccommodation" /> class.
        /// </summary>
        /// <param name="accommodationDescriptor">The specific type of special variation used in how an examination is presented, how it is administered, or how the test taker is allowed to respond. This generally refers to changes that do not substantially alter what the examination measures. The proper use of accommodations does not substantially change academic level or performance criteria. (required).</param>
        /// <param name="ext">Extensions to the StudentAssessmentAccommodation entity..</param>
        public EdFiStudentAssessmentAccommodation(string accommodationDescriptor = default, Object ext = default)
        {
            // to ensure "accommodationDescriptor" is required (not null)
            if (accommodationDescriptor == null)
            {
                throw new ArgumentNullException("accommodationDescriptor is a required property for EdFiStudentAssessmentAccommodation and cannot be null");
            }
            this.AccommodationDescriptor = accommodationDescriptor;
            this.Ext = ext;
        }

        /// <summary>
        /// The specific type of special variation used in how an examination is presented, how it is administered, or how the test taker is allowed to respond. This generally refers to changes that do not substantially alter what the examination measures. The proper use of accommodations does not substantially change academic level or performance criteria.
        /// </summary>
        /// <value>The specific type of special variation used in how an examination is presented, how it is administered, or how the test taker is allowed to respond. This generally refers to changes that do not substantially alter what the examination measures. The proper use of accommodations does not substantially change academic level or performance criteria.</value>
        [DataMember(Name = "accommodationDescriptor", IsRequired = true, EmitDefaultValue = true)]
        public string AccommodationDescriptor { get; set; }

        /// <summary>
        /// Extensions to the StudentAssessmentAccommodation entity.
        /// </summary>
        /// <value>Extensions to the StudentAssessmentAccommodation entity.</value>
        [DataMember(Name = "_ext", EmitDefaultValue = false)]
        public Object Ext { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EdFiStudentAssessmentAccommodation {\n");
            sb.Append("  AccommodationDescriptor: ").Append(AccommodationDescriptor).Append("\n");
            sb.Append("  Ext: ").Append(Ext).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // AccommodationDescriptor (string) maxLength
            if (this.AccommodationDescriptor != null && this.AccommodationDescriptor.Length > 306)
            {
                yield return new ValidationResult("Invalid value for AccommodationDescriptor, length must be less than 306.", new [] { "AccommodationDescriptor" });
            }

            yield break;
        }
    }

}
