/*
 * Ed-Fi Operational Data Store API
 *
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = EdFi.OdsApi.Sdk.v72.Client.OpenAPIDateConverter;

namespace EdFi.OdsApi.Sdk.v72.Models.All
{
    /// <summary>
    /// EdFiLocalEducationAgencyAccountability
    /// </summary>
    [DataContract(Name = "edFi_localEducationAgencyAccountability")]
    public partial class EdFiLocalEducationAgencyAccountability : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EdFiLocalEducationAgencyAccountability" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EdFiLocalEducationAgencyAccountability() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EdFiLocalEducationAgencyAccountability" /> class.
        /// </summary>
        /// <param name="gunFreeSchoolsActReportingStatusDescriptor">An indication of whether the school or Local Education Agency (LEA) submitted a Gun-Free Schools Act (GFSA) of 1994 report to the state, as defined by Title 18, Section 921..</param>
        /// <param name="schoolChoiceImplementStatusDescriptor">An indication of whether the LEA was able to implement the provisions for public school choice under Title I, Part A, Section 1116 of ESEA as amended..</param>
        /// <param name="schoolYearTypeReference">schoolYearTypeReference (required).</param>
        /// <param name="ext">Extensions to the LocalEducationAgencyAccountability entity..</param>
        public EdFiLocalEducationAgencyAccountability(string gunFreeSchoolsActReportingStatusDescriptor = default, string schoolChoiceImplementStatusDescriptor = default, EdFiSchoolYearTypeReference schoolYearTypeReference = default, Object ext = default)
        {
            // to ensure "schoolYearTypeReference" is required (not null)
            if (schoolYearTypeReference == null)
            {
                throw new ArgumentNullException("schoolYearTypeReference is a required property for EdFiLocalEducationAgencyAccountability and cannot be null");
            }
            this.SchoolYearTypeReference = schoolYearTypeReference;
            this.GunFreeSchoolsActReportingStatusDescriptor = gunFreeSchoolsActReportingStatusDescriptor;
            this.SchoolChoiceImplementStatusDescriptor = schoolChoiceImplementStatusDescriptor;
            this.Ext = ext;
        }

        /// <summary>
        /// An indication of whether the school or Local Education Agency (LEA) submitted a Gun-Free Schools Act (GFSA) of 1994 report to the state, as defined by Title 18, Section 921.
        /// </summary>
        /// <value>An indication of whether the school or Local Education Agency (LEA) submitted a Gun-Free Schools Act (GFSA) of 1994 report to the state, as defined by Title 18, Section 921.</value>
        [DataMember(Name = "gunFreeSchoolsActReportingStatusDescriptor", EmitDefaultValue = true)]
        public string GunFreeSchoolsActReportingStatusDescriptor { get; set; }

        /// <summary>
        /// An indication of whether the LEA was able to implement the provisions for public school choice under Title I, Part A, Section 1116 of ESEA as amended.
        /// </summary>
        /// <value>An indication of whether the LEA was able to implement the provisions for public school choice under Title I, Part A, Section 1116 of ESEA as amended.</value>
        [DataMember(Name = "schoolChoiceImplementStatusDescriptor", EmitDefaultValue = true)]
        public string SchoolChoiceImplementStatusDescriptor { get; set; }

        /// <summary>
        /// Gets or Sets SchoolYearTypeReference
        /// </summary>
        [DataMember(Name = "schoolYearTypeReference", IsRequired = true, EmitDefaultValue = true)]
        public EdFiSchoolYearTypeReference SchoolYearTypeReference { get; set; }

        /// <summary>
        /// Extensions to the LocalEducationAgencyAccountability entity.
        /// </summary>
        /// <value>Extensions to the LocalEducationAgencyAccountability entity.</value>
        [DataMember(Name = "_ext", EmitDefaultValue = false)]
        public Object Ext { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EdFiLocalEducationAgencyAccountability {\n");
            sb.Append("  GunFreeSchoolsActReportingStatusDescriptor: ").Append(GunFreeSchoolsActReportingStatusDescriptor).Append("\n");
            sb.Append("  SchoolChoiceImplementStatusDescriptor: ").Append(SchoolChoiceImplementStatusDescriptor).Append("\n");
            sb.Append("  SchoolYearTypeReference: ").Append(SchoolYearTypeReference).Append("\n");
            sb.Append("  Ext: ").Append(Ext).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // GunFreeSchoolsActReportingStatusDescriptor (string) maxLength
            if (this.GunFreeSchoolsActReportingStatusDescriptor != null && this.GunFreeSchoolsActReportingStatusDescriptor.Length > 306)
            {
                yield return new ValidationResult("Invalid value for GunFreeSchoolsActReportingStatusDescriptor, length must be less than 306.", new [] { "GunFreeSchoolsActReportingStatusDescriptor" });
            }

            // SchoolChoiceImplementStatusDescriptor (string) maxLength
            if (this.SchoolChoiceImplementStatusDescriptor != null && this.SchoolChoiceImplementStatusDescriptor.Length > 306)
            {
                yield return new ValidationResult("Invalid value for SchoolChoiceImplementStatusDescriptor, length must be less than 306.", new [] { "SchoolChoiceImplementStatusDescriptor" });
            }

            yield break;
        }
    }

}
